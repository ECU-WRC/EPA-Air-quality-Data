library(shiny)
library(openxlsx)
library(ggplot2)
library(dplyr)
library(tidyr)

ui <- fluidPage(
  titlePanel("Parameter Analysis"),
  
  sidebarLayout(
    sidebarPanel(
      textInput("url", "Enter Excel File URL", value = "https://www.arcgis.com/sharing/rest/content/items/d364201435d94bb1a402036b78da0466/data"),
      selectizeInput("params", "Select Parameters", choices = NULL, multiple = TRUE)
    ),
    
    mainPanel(
      plotOutput("histogram")
    )
  )
)

server <- function(input, output, session) {
  
  data <- reactive({
    req(input$url)
    xls <- openxlsx::read.xlsx(input$url)
    return(xls)
  })
  
  observe({
    if (!is.null(data())) {
      param_choices <- unique(data()$`Parameter Name`)
      updateSelectizeInput(session, "params", choices = param_choices, selected = param_choices[1:3])
    }
  })
  
  selected_data <- reactive({
    req(input$url)
    selected_params <- input$params
    
    filtered_data <- lapply(selected_params, function(param) {
      xls_sheets <- names(openxlsx::getSheetNames(input$url))
      df_list <- lapply(xls_sheets, function(sheet) {
        df <- openxlsx::read.xlsx(input$url, sheet = sheet)
        df$Year <- sheet  # Add a "Year" column with the sheet name
        return(df)
      })
      combined_df <- bind_rows(df_list)
      filtered_df <- combined_df %>%
        filter(`Parameter Name` == param)
      return(filtered_df)
    })
    
    return(filtered_data)
  })
  
  observe({
    output$histogram <- renderPlot({
      req(length(selected_data()) > 0)
      
      combined_data <- bind_rows(selected_data())
      
      ggplot(combined_data, aes(x = `Arithmetic Mean`, fill = `Parameter Name`)) +
        geom_histogram(binwidth = 0.1, position = "dodge") +
        labs(
          title = "Histogram of Arithmetic Means for Each Parameter and Year",
          x = "Arithmetic Mean",
          y = "Frequency"
        ) +
        facet_wrap(~Year, scales = "free_x") +
        theme(legend.position = "top")
    })
  })
}

shinyApp(ui, server)
